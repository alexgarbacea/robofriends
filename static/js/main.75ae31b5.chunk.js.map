{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","SearchBox","searchfield","searchChange","class","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":";6MAeeA,EAbF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAExB,OACI,sBAAKC,UAAU,mDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,mBACpB,gCACI,oBAAIC,UAAU,cAAd,SAA6BH,IAC7B,mBAAGG,UAAU,KAAb,SAAmBF,WCWpBK,EAjBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACTC,EAAgBD,EAAOE,KAAI,SAACC,EAAMC,GACpC,OACA,cAAC,EAAD,CAEAT,GAAIK,EAAOI,GAAGT,GACdF,KAAMO,EAAOI,GAAGX,KAChBC,MAAOM,EAAOI,GAAGV,OAHZU,MAMT,OACI,8BACKH,KCFEI,EAXG,SAAC,GAA+B,EAA9BC,YAA+B,IAAlBC,EAAiB,EAAjBA,aAC7B,OACI,qBAAKC,MAAM,SAAX,SACI,uBAAOA,MAAM,sCACZC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCERK,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBC,OAAQ,SAApE,SACKJ,EAAMK,YCkBJC,E,kDApBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAW,GAHD,E,qDAOlB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAG5B,WACI,OAAOG,KAAKJ,MAAMC,SACb,yCAEDG,KAAKX,MAAMK,a,GAhBIQ,aCsDZC,E,kDA/CX,aAAc,IAAD,8BACT,gBAkBJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACnB,YAAauB,EAAMC,OAAOC,SAlBzC,EAAKX,MAAQ,CACTpB,OAAQ,GACRM,YAAa,IAJR,E,qDAQb,WAAoB,IAAD,OACf0B,MAAM,8CAA8CC,MAAK,SAAAC,GACrD,OAAOA,EAASC,UACjBF,MACC,SAAAG,GACI,EAAKX,SAAS,CAAEzB,OAAQoC,S,oBAUpC,WACI,MAA4BZ,KAAKJ,MAA3BpB,EAAN,EAAMA,OAAOM,EAAb,EAAaA,YAEP+B,EAAiBrC,EAAOsC,QAAO,SAAAC,GACjC,OAAOA,EAAM9C,KAAK+C,oBAAoBC,SAASnC,EAAYkC,wBAG/D,OAAQxC,EAAO0C,OAGX,sBAAKlC,MAAM,KAAX,UACI,oBAAIA,MAAM,QAAV,SAAkB,mDAClB,cAAC,EAAD,CAAWD,aAAciB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU5B,OAAQqC,WAP9B,oBAAI7B,MAAM,QAAV,mC,GAhCMkB,aCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACL,cAAC,EAAD,IACDC,SAASC,eAAe,SAI3BX,M","file":"static/js/main.75ae31b5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n    // const{name, email, id} = props;\r\n    return(\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img alt='robot' src={`https://robohash.org/${id}?size=200x200`} />\r\n            <div>\r\n                <h2 className=\"f4 tc grtxt\">{name}</h2>\r\n                <p className=\"tc\">{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardComponent = robots.map((user, i) => {\r\n        return (\r\n        <Card \r\n        key={i} \r\n        id={robots[i].id} \r\n        name={robots[i].name} \r\n        email={robots[i].email} />\r\n        );\r\n    })\r\n    return(\r\n        <div>\r\n            {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) =>{\r\n    return(\r\n        <div class=\"pa2 tc\">\r\n            <input class='pa3 ba b--green bg-lightest-blue f6'\r\n             type=\"search\" \r\n             placeholder=\"Search robots\"\r\n             onChange={searchChange} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border:'1px solid black', height: '500px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError:true});\r\n    }\r\n\r\n    render(){\r\n        return this.state.hasError ?//IF ELSE\r\n             <h1>Oops...</h1>:\r\n        (\r\n            this.props.children\r\n        );\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n// import { robots } from './robots';//USE {} TO DESTRUCTURE (ex{robots, cats}) NOT FOR DEFAULT\r\n\r\n\r\nclass App extends Component {//CLASS, not CONST/VAR/LET\r\n    constructor(){\r\n        super();//!\r\n        this.state = {\r\n            robots: [],//if local, robots: robots\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response => {\r\n            return response.json();\r\n        }).then(\r\n            users => {\r\n                this.setState({ robots: users });\r\n            }\r\n        );\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {//Random named function-CATCHES EVENT CHANGES\r\n        this.setState({searchfield: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        const{robots,searchfield} = this.state;//Clean upcode with reference\r\n\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\r\n        })\r\n\r\n        return !robots.length ?//IF ELSE\r\n            <h1 class=\"f1 tc\">Loading robots...</h1> :\r\n        (   \r\n            <div class=\"tc\">\r\n                <h1 class=\"f1 tc\"><strong>ROBOFRIENDS</strong></h1>\r\n                <SearchBox searchChange={this.onSearchChange}/>\r\n                <ErrorBoundry>\r\n                    <Scroll>\r\n                        <CardList robots={filteredRobots/*!!!*/} />\r\n                    </Scroll>\r\n                </ErrorBoundry>\r\n            </div>\r\n        );\r\n        \r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n    <App />\n  ,document.getElementById('root')\n);\n\n\nreportWebVitals();\n"],"sourceRoot":""}